// <auto-generated />
using System;
using AICodingGame.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AICodingGame.DAL.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20240422132707_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AICodingGame.DAL.Models.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.BattleMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BattleId")
                        .HasColumnType("integer");

                    b.Property<int>("RobotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BattleId");

                    b.HasIndex("RobotId");

                    b.ToTable("BattleMembers");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.BattleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BattleStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Завершён"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Идёт"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Удалён"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Прерван"
                        });
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.MemberBattleStatistic", b =>
                {
                    b.Property<int>("BattleId")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<float>("AccuracyPercent")
                        .HasColumnType("real");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("LifeTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("BattleId", "MemberId");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("BattleStatistics");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.Robot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<DateOnly?>("LastUpdated")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("ProjectPath");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.Statistic", b =>
                {
                    b.Property<int>("RobotId")
                        .HasColumnType("integer");

                    b.Property<float>("KillDeathPercent")
                        .HasColumnType("real");

                    b.Property<float>("WinnerPercent")
                        .HasColumnType("real");

                    b.HasKey("RobotId");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.Battle", b =>
                {
                    b.HasOne("AICodingGame.DAL.Models.BattleStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.BattleMember", b =>
                {
                    b.HasOne("AICodingGame.DAL.Models.Battle", "Battle")
                        .WithMany("Members")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AICodingGame.DAL.Models.Robot", "Robot")
                        .WithMany("BattleMembers")
                        .HasForeignKey("RobotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.MemberBattleStatistic", b =>
                {
                    b.HasOne("AICodingGame.DAL.Models.Battle", "Battle")
                        .WithMany()
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AICodingGame.DAL.Models.BattleMember", "Member")
                        .WithOne("Statistic")
                        .HasForeignKey("AICodingGame.DAL.Models.MemberBattleStatistic", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.Statistic", b =>
                {
                    b.HasOne("AICodingGame.DAL.Models.Robot", "Robot")
                        .WithOne("Statistic")
                        .HasForeignKey("AICodingGame.DAL.Models.Statistic", "RobotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.Battle", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.BattleMember", b =>
                {
                    b.Navigation("Statistic")
                        .IsRequired();
                });

            modelBuilder.Entity("AICodingGame.DAL.Models.Robot", b =>
                {
                    b.Navigation("BattleMembers");

                    b.Navigation("Statistic")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
